getwd()
lol = read.csv("lolParse.csv", header = F)
colnames(lol) = c('matchMode','season','matchDuration','queueType','matchType','mapId',
'p1championId','p1highestAchievedSeasonTier','p1item0','p1item1','p1item2','p1item3','p1item4','p1item5','p1item6',
'p1sightWardsBoughtInGame','p1visionWardsBoughtInGame','p1wardsKilled','p1wardsPlaced','p1winner',
'p2championId','p2highestAchievedSeasonTier','p2item0','p2item1','p2item2','p2item3','p2item4','p2item5','p2item6',
'p2sightWardsBoughtInGame','p2visionWardsBoughtInGame','p2wardsKilled','p2wardsPlaced','p2winner',
'p3championId','p3highestAchievedSeasonTier','p3item0','p3item1','p3item2','p3item3','p3item4','p3item5','p3item6',
'p3sightWardsBoughtInGame','p3visionWardsBoughtInGame','p3wardsKilled','p3wardsPlaced','p3winner',
'p4championId','p4highestAchievedSeasonTier','p4item0','p4item1','p4item2','p4item3','p4item4','p4item5','p4item6',
'p4sightWardsBoughtInGame','p4visionWardsBoughtInGame','p4wardsKilled','p4wardsPlaced','p4winner',
'p5championId','p5highestAchievedSeasonTier','p5item0','p5item1','p5item2','p5item3','p5item4','p5item5','p5item6',
'p5sightWardsBoughtInGame','p5visionWardsBoughtInGame','p5wardsKilled','p5wardsPlaced','p5winner',
'p6championId','p6highestAchievedSeasonTier','p6item0','p6item1','p6item2','p6item3','p6item4','p6item5','p6item6',
'p6sightWardsBoughtInGame','p6visionWardsBoughtInGame','p6wardsKilled','p6wardsPlaced','p6winner',
'p7championId','p7highestAchievedSeasonTier','p7item0','p7item1','p7item2','p7item3','p7item4','p7item5','p7item6',
'p7sightWardsBoughtInGame','p7visionWardsBoughtInGame','p7wardsKilled','p7wardsPlaced','p7winner',
'p8championId','p8highestAchievedSeasonTier','p8item0','p8item1','p8item2','p8item3','p8item4','p8item5','p8item6',
'p8sightWardsBoughtInGame','p8visionWardsBoughtInGame','p8wardsKilled','p8wardsPlaced','p8winner',
'p9championId','p9highestAchievedSeasonTier','p9item0','p9item1','p9item2','p9item3','p9item4','p9item5','p9item6',
'p9sightWardsBoughtInGame','p9visionWardsBoughtInGame','p9wardsKilled','p9wardsPlaced','p9winner',
'p0championId','p0highestAchievedSeasonTier','p0item0','p0item1','p0item2','p0item3','p0item4','p0item5','p0item6',
'p0sightWardsBoughtInGame','p0visionWardsBoughtInGame','p0wardsKilled','p0wardsPlaced','p0winner')
lol = unique(lol)
head(lol)
write.csv('LeagueOfLegendsMatches.csv')
getwd()
write.csv(lol, '~/TheDataIncubator/LoLMatches/LeagueOfLegendsMatches.csv')
lol = read.csv('LeagueOfLegendsMatches.csv')
head(lol)
unique(lol$p1highestAchievedSeasonTier)
require(ggplot2)
unique(factor(lol$p1wardsPlaced))
range(lol$p1wardsPlaced)
range(lol$p1wardsKilled)
ncol(lol)
head(lol[,148])
lol[,148] = NULL
require(plyr)
?reshape
require(reshape)
test = data.frame('a1' = 1:4, 'b1' = 5:8, 'a2' = 11:14)
test
reshape(test, idvar='b1' )
reshape(test, idvar='b1', direction='wide')
reshape(test, idvar=b1, direction='wide')
reshape(test, v.names = c('a1', 'a2'), idvar='b1', direction='wide')
test2 = data.frame(id= rep(1:4, rep(2,4)), visit = I(rep(c('Before', 'After'), 4)), x=rnorm(4), y=runif(4))
test2
reshape(test2, timevar='visit', idvar='id', direction='wide', v.names='x')
test
reshape(test)
reshape(test, direction=long)
reshape(test, direction='long')
reshape(test, varying='a1', direction='long')
df3 <- data.frame(school = rep(1:3, each = 4), class = rep(9:10, 6),
time = rep(c(1,1,2,2), 3), score = rnorm(12))
df3
reshape(df3, idvar=c("school", "class"), direction='wide')
reshape(reshape(df3, idvar=c("school", "class"), direction='wide'), direction='long')
test.lol = head(lol)
test.lol
test.lol[13,]
test.lol[,13]
test.lol[,14]
test.lol[,34]
test.lol[,333]
test.lol[,33]
test.lol[,35]
test.lol = test.lol[,1:35]
test.lol
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
names(lol)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny)
runExample()
runExample('02_text')
lol = read.csv("LeagueOfLegendsMatches.csv")
unique(lol)
lol = unique(lol)
head(lol)
nrow(lol)
colnames(lol) = c('gameNumber', 'matchMode','season','matchDuration','queueType','matchType','mapId', 'playerId',
'championId','highestAchievedSeasonTier','item0','item1','item2','item3','item4','item5','item6',
'sightWardsBoughtInGame','visionWardsBoughtInGame','wardsKilled','wardsPlaced',
'firstInhibitorAssist', 'firstInhibitorKill', 'lane', 'winner')
ncol(lol)
head(lol)
head(lol[,26])
lol[,26] = NULL
require(ggplot2)
2508/60
typeof(lol$firstInhibitorAssist)
unique(lol$firstInhibitorAssist)
lol[1:10,]
lol[10:20,]
lol[9:20,]
head(lol)
lol$championId = as.factor(lol$championId)
typeof(lol$championId)
lol$championId[1] + lol$championId[2]
table(lol$championId)
hist(lol$championId)
lol = read.csv("LeagueOfLegendsMatches.csv", header=F)
lol[1:11,]
colnames(lol) = c('gameNumber', 'matchMode','season','matchDuration','queueType','matchType','mapId', 'playerId',
'championId','highestAchievedSeasonTier','item0','item1','item2','item3','item4','item5','item6',
'sightWardsBoughtInGame','visionWardsBoughtInGame','wardsKilled','wardsPlaced',
'firstInhibitorAssist', 'firstInhibitorKill', 'lane', 'winner')
head(lol)
ncol(lol)
lol[,26] = NULL
champs = read.csv('G:/data/ChampionIds.txt', header=F)
head(champs)
colnames(champs) = c("championId", "Name")
head(champs)
nrow(champs)
champs$championId = as.factor(champs$championId)
test = champs$name[which(lol$championId[1] == champs$championId]
test = champs$name[which(lol$championId[1] == champs$championId)]
test
which(lol$championId[1] == champs$championId)
lol$championId[1]
colnames(champs) = c("championId", "name")
test = champs$name[which(lol$championId[1] == champs$championId)]
test
lol$championName = champs$name[which(lol$championId == champs$championId)]
head(lol)
convertChampIdToName <- function(id, champs) {
return(champs[which(champs$championId==id)])
}
convertChampIdToName(as.factor(27))
convertChampIdToName(as.factor(27), champs)
which(champs$championId == as.factor(27))
lol$championId = as.numeric(lol$championId)
head(lol)
range(lol$championId)
champs$championId = as.numeric(champs$championId)
which(champs$championId==27)
champs[,3]
champs$name[3]
convertChampIdToName <- function(id, champs) {
return(champs$name[which(champs$championId==id)])
}
convertChampIdToName(88, champs)
lol$championName = sapply(X = lol$championId, FUN = 'convertChampIdToName')
convertChampIdToName <- function(id) {
return(champs$name[which(champs$championId==id)])
}
lol$championName = sapply(X = lol$championId, FUN = 'convertChampIdToName')
head(lol)
convertChampIdToName(114)
?sapply
sapply(X = lol$championId[1:10], FUN = 'convertChampIdToName')
vapply(X = lol$championId[1:10], FUN = 'convertChampIdToName')
require(plyr)
head(lol)
lol$championName=NULL
lol2 = ddply(lol, .(championId), mutate, championName = convertChampIdToName(championId))
nrow(lol)
?ddply
lol$championName = NA
for(i in 1:nrow(lol)){lol$championName[i] = convertChampIdToName(lol$championId[i])}
head(lol)
convertChampIdToName(42)
convertChampIdToName(238)
champs
which(champs$championId==238)
which(champs$name == "Zed")
champs = read.csv('G:/data/ChampionIds.txt', header=F)
colnames(champs) = c("championId", "name")
convertChampIdToName <- function(id) {
return(champs$name[which(champs$championId==id)])
}
convertChampIdToName(238)
champs
for(i in 1:nrow(lol)){lol$championName[i] = convertChampIdToName(lol$championId[i])}
head(lol)
for(i in 1:nrow(lol)){lol$championName[i] = as.factor(convertChampIdToName(lol$championId[i]))}
head(lol)
nrow(lol)
lol2 = ddply(lol, .(championId), mutate, championName = convertChampIdToName(championId))
lol$championName = NULL
lol$championName = 'zero'
head(lol)
for(i in 1:nrow(lol)){lol$championName[i] = as.factor(convertChampIdToName(lol$championId[i]))}
head(lol)
convertChampIdToName(lol$championId[1])
as.factor(convertChampIdToName(lol$championId[1]))
lol$championName[1] = as.factor(convertChampIdToName(lol$championId[1]))
head(lol)
lol$championName[1]
as.integer('teemo')
as.character(convertChampIdToName(lol$championId[1]))
for(i in 1:nrow(lol)){
lol$championName[i] = as.character(convertChampIdToName(lol$championId[i]))}
head(lol)
table(lol$championName)
test = ggplot(lol, aes(x=championName))
test + geom_histogram()
popular = table(lol$championName)
popular = as.data.frame(table(lol$championName))
popular
head(popular)
?sort
popular = order(Freq)
popular[order(popular$Freq)]
popular[order(popular$Freq),]
p = ggplot(data = popular, aes(x=Var1)) + geom_bar(stat='identity')
p
p = ggplot(data = popular, aes(x=Var1, y=Freq)) + geom_bar(stat='identity')
p
p = ggplot(data = popular, aes(x=Var1, y=Freq)) + geom_point(stat='identity')
p
p = ggplot(data = popular, aes(x=factor(Var1), y=Freq)) + geom_point(stat='identity')
p
popular = popular[order(popular$Freq),]
head(popular)
popular$Var1 = with(popular, factor(Var1, levels = popular$Var1))
levels(popular$Var1)
p = ggplot(data = popular, aes(x=factor(Var1), y=Freq)) + geom_point(stat='identity')
p
colnames(popular)=c("Champion", "Popularity")
popularity
popular
head(lol)
runExample()
runExample("02_text")
runExample("03_reactivity")
?renderPlot
runExample("04_mpg")
shiny::runApp()
shiny::runApp()
head(lol)
runExample("04_mpg")
shiny::runApp()
shiny::runApp()
shiny::runApp()
?boxplot
shiny::runApp()
shiny::runApp()
runExample()
runExample("05_sliders")
runExample("06_tabsets")
runExample("07_widgets")
runExample("08_html")
?runExample()
runExample('11_timer')
?runExample()
runExample()
runExample('10_download')
head(lol)
levels(lol$championName)
levels(lol$championName)
levels(factor(lol$championName)))
levels(factor(lol$championName))
tail(popular)
head(lol)
write.csv(lol, 'LeagueData.csv')
runExample()
runExample("02_text")
levels(factor(lol$championName))
typeof(lol$matchDuration[1])
lol$matchDuration[1] +1
boxplot(data = lol, formula = matchDuration ~ championName, x=championName)
?boxplot
boxplot(data = lol, formula = matchDuration ~ championName)
boxplot(matchDuration ~ championName, data = lol)
lol$matchMin = lol$matchDuration/60
head(lol$matchMin)
range(lol$matchMin)
tail(popular)
?geom_boxplot
runExample()
runExample('03_reactivity')
runExample('04_mpg')
test2 = c()
test2
?append
append(test2, 'teemo')
test2
'teemo' %in% c("dog", "cat", "teemo")
test2 = c('Ezreal', 'Shaco', 'Teemo', 'Blitzcrank')
lol.sub = subset(lol, lol$championName %in% test2)
head(lol.sub)
nrow(lol.sub)
ggplot(lol.sub, aes(x=championName, y=matchMin)) + geom_boxplot()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
popular
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runExample()
runExample('07_widgets')
shiny::runApp()
shiny::runApp()
deployApp()
require(shinyapps)
deployApp()
